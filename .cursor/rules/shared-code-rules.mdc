---
description: 
globs: 
alwaysApply: false
---
# 共用程式碼開發指南

## 基本原則
- 共用程式碼放在 shared 目錄下
- 保持高內聚低耦合的設計原則
- 明確定義共用模組的介面
- 避免在共用代碼中引入特定於平台的依賴

## 類型定義
- 使用 TypeScript 介面定義資料模型
- 共用模型放在 shared/models 目錄
- 命名清晰且符合領域含義
- 類型定義應該具有良好的文檔註釋

## 共用工具函數
- 工具函數放在 shared/utils 目錄
- 每個工具函數應該有單一職責
- 確保所有工具函數都經過測試
- 避免副作用，優先設計純函數

## 常量與枚舉
- 常量與枚舉放在 shared/constants 目錄
- 使用有意義的命名
- 按領域或功能分組
- 使用 TypeScript 枚舉提高類型安全

## 共用組件
- UI 組件放在 shared/components 目錄
- 每個組件應該有明確的文檔
- 設計可重用且可擴展的組件
- 避免組件之間的相互依賴

