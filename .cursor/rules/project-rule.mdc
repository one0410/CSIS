---
description: 
globs: 
alwaysApply: true
---
# 專案架構與開發規範

## 目錄結構
- 伺服器端程式在 server 目錄下
- WEB專案在 web 目錄下
- 如果有兩個專案共用程式碼放在 shared 目錄下

## 開發環境
- 伺服器使用 bun 取代 nodejs
- 套件管理工具使用 yarn 取代 npm
- WEB 專案使用 Angular 框架

## 伺服器端
- 儘量使用 bun 內建功能取代其他第三方套件
- 使用 express 提供 RESTAPI功能
- 資料庫使用 mongodb 5
- 存取 ssl 時, 一律不檢查憑證合法性
- 資料存取提供前端統一 /api/mongodb API入口, 例如讀取時使用 GET /api/mongodb/:collection/:filter, 新增時使用 POST /api/mongodb/:collection, 修改時使用 PUT /api/mongodb/:collection/:id, 更新部分資料時使用 PATCH /api/mongodb/:collection/:id, 刪除單筆時使用 DELETE /api/mongodb/:collection/:id, 刪除多筆使用 POST /api/mongodb/:collection/deleteMany
- GET /api/mongodb/:collection 回傳時, 會加入 X-Pagination 表頭, 包含 {"count":19,"limit":500,"skip":0} 這樣的格式, 表示查詢總筆數, 此次查詢 limit 數, 此次查詢 skip 數。

## 前端 WEB 開發規範 for Angular
- 使用 Angular 20
- 使用 bootstrap 5
- 使用 @if 新語法替代 *ngIf
- 避免使用 rxjs
- 跨元件通知請使用 computed signal 來處理畫面變化
- 表單請使用 template driven form
- 使用 fetch API 取代 HttpClient
- 路由設定統一在 src/app/app.routes.ts 中
- 請善用 bootstrap 的 functional CSS, 可以在 html 中直接加入例如 fs-2, d-flex, p-2, ms-3, h-100, position-fixed 等等, 除非沒有的樣式, 再寫到頁面附屬的 .scss 檔案。
  

